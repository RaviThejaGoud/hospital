package com.urt.persistence.model.common;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

import com.urt.persistence.model.base.PersistentObject;



/**
 * AbstractState generated by MyEclipse - Hibernate Tools
 */
@Entity
@Table(name = "State")
public class State  extends PersistentObject {

    private static final long serialVersionUID = -9190968485277417762L;
    private String stateCode;
    private String stateName;
   /* private long countryId;
    private String countryName;
    

    // Constructors

    public long getCountryId() {
		return countryId;
	}

	public void setCountryId(long countryId) {
		this.countryId = countryId;
	}

	public String getCountryName() {
		return countryName;
	}

	public void setCountryName(String countryName) {
		this.countryName = countryName;
	}*/

    /** default constructor */
    public State() {
    }
    
    /** full constructor */
    public State(String stateCode, String stateName) {
        this.stateCode = stateCode;
        this.stateName = stateName;
    }

    @Column(name = "stateCode", nullable = true, length = 20)
    public String getStateCode() {
        return this.stateCode;
    }
    
    public void setStateCode(String stateCode) {
        this.stateCode = stateCode;
    }

    @Column(name = "stateName", nullable = true, length = 100)
    public String getStateName() {
        return this.stateName;
    }
    
    public void setStateName(String stateName) {
        this.stateName = stateName;
    }

    /**
     * @see java.lang.Object#hashCode()
     */
    @Override
	public int hashCode() {
        return new HashCodeBuilder(-465592447, 1546771509).append(
                this.stateName).append(this.stateCode).toHashCode();
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    @Override
	public boolean equals(Object object) {
        if (!(object instanceof State)) {
            return false;
        }
        State rhs = (State) object;
        return new EqualsBuilder().append(this.stateName, rhs.stateName)
                .append(this.stateCode, rhs.stateCode).isEquals();
    }

    /**
     * @see java.lang.Object#toString()
     */
    @Override
	public String toString() {
        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
                .append("id", this.getId())
                .append("stateCode",
                        this.stateCode).append("stateName", this.stateName)
                .toString();
    }

    /**
     * @see java.lang.Comparable#compareTo(Object)
     */
    @Override
	public int compareTo(Object object) {
    	State target = (State) object;
        if (target.getStateName() != null && this.getStateName() != null)
        {
            if(this.getStateName().equalsIgnoreCase(target.getStateName()))
                return 0;
            else 
               return this.getStateName().compareToIgnoreCase(target.getStateName());
                 
        }
		return 0;
    }
   
}